{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"EchoTherm Documentation","text":"<p>Welcome to the EchoMAV Technical Library for the EchoTherm Module.</p> <ul> <li> Overview</li> <li> Quick Start</li> <li> Technical Specifications</li> <li> Hardware Guide</li> <li> Software Guide</li> <li> Pinouts</li> <li> Mechanical</li> </ul>"},{"location":"electrical/","title":"Pinouts and Connectors","text":""},{"location":"electrical/#backplate-configuration","title":"Backplate Configuration","text":""},{"location":"electrical/#no-backplate","title":"No Backplate","text":"<p>The EchoTherm can be used with no backplate attached, in which the user must create or use a commercial thermal module carrier board. The EchoTherm Module is form-factor and pin-compatible with FLIR Boson adapters as long as those adapter use the USB interface.  </p> <p>The connector on the back of the EchoTherm is a Hirose DF40C-80DP-0.4V(51) and is designed to be used with the mating connector DF40HC(4.0)-80DS-0.4V(51).</p> <p> Pin Number Direction Voltage Pin Description 1 Pwr GND GND 2 Pwr +3.3V Power In 3 Pwr GND GND 4 Pwr +3.3V Power In 5 Pwr GND GND 6 Pwr +3.3V Power In 7 Pwr GND GND 8 Pwr +3.3V Power In 9 IO NA USB D- 10 Pwr GND GND 11 IO NA USB D+ 12 NA NA NC 13 Pwr GND GND 14 NA NA NC 15 NA NA NC 16 NA NA NC 17 NA NA NC 18 NA NA NC 19 Pwr GND GND 20 Pwr GND GND 21 NA NA NC 22 NA NA NC 23 NA NA NC 24 NA NA NC 25 NA NA NC 26 NA NA NC 27 NA NA NC 28 NA NA NC 29 Pwr GND GND 30 Pwr GND GND 31 NA NA NC 32 NA NA NC 33 NA NA NC 34 NA NA NC 35 NA NA NC 36 NA NA NC 37 NA NA NC 38 NA NA NC 39 Pwr GND GND 40 Pwr GND GND 41 NA NA NC 42 NA NA NC 43 NA NA NC 44 NA NA NC 45 NA NA NC 46 NA NA NC 47 NA NA NC 48 NA NA NC 49 Pwr GND GND 50 Pwr GND GND 51 NA NA NC 52 NA NA NC 53 NA NA NC 54 NA NA NC 55 NA NA NC 56 NA NA NC 57 NA NA NC 58 NA NA NC 59 Pwr GND GND 60 Pwr GND GND 61 NA NA NC 62 NA NA NC 63 NA NA NC 64 NA NA NC 65 NA NA NC 66 NA NA NC 67 NA NA NC 68 NA NA NC 69 Pwr GND GND 70 Pwr GND GND 71 NA NA NC 72 NA NA NC 73 NA NA NC 74 NA NA NC 75 NA NA NC 76 NA NA NC 77 NA NA NC 78 NA NA NC 79 Pwr GND GND 80 NA NA NC <p></p>"},{"location":"electrical/#usb-backplate","title":"USB Backplate","text":"<p>The included USB 2.0 adapter board attaches to the Hirose connector above, and provides a JST GH 4 pin connector for USB connectivity. A USB Micro to JST GH adapter is included, but the pinout is provided below if you wish to make a custom cable assembly.</p> <p> Pin Number Direction Voltage Pin Description 1 Pwr +5.0V Power In 2 IO NA USB D- 3 IO NA USB D+ 4 Pwr GND GND <p></p>"},{"location":"hardware/","title":"Hardware Guide","text":"<p>The EchoTherm system uses the EchoMAV EchoPilot AI combined with a customized carrier board.</p> <p>To fill in gaps not covered in this documentation, please cross reference the EchoPilot AI Documentation. </p> <p>The flow chart below shows the overall hardware architecture. The custom carrier board described below mates to the EchoPilotAI's board to board connectors, and provided EchoTherm-specific functionality. Specifically, the EchoTherm carrier board provides two Septentrio GNSS units, a RS-422 level shifter for an external INS system, two FTDI serial converters, power subsystems and connectors not found on EchoMAV's standard commercial carrier board. The system also includes a ruggedize aluminum enclosure, passive heat dissipation, IP67-design, and industrial M12 connectors.</p> <p></p> <p></p>"},{"location":"hardware/#carrier-board-schematic","title":"Carrier Board Schematic","text":"<p>The EchoTherm Carrier Board Schematic is available to download. </p>"},{"location":"hardware/#fmu-ports","title":"FMU Ports","text":"<p>The Autopilot system (also referred to as Flight Management Unit (FMU)) is based on the open-hardware Pixhawk design running an STM32H743 microcontroller. The peripherals for this device are connected via I2C, SPI, CAN and UART ports. The table below identifies how each peripheral interfaces is used.</p> Port Use Connector Assignement USART1 GPS1 Mosaic X5 GPS (serial port 1, pins B1/D1) USART2 GPS2 Mosaic H (serial port 1, pins B1/D1) USART3 Telemetry to Jetson (Telem2) NA (internally routed) UART4 External INS1 (RS-422 shifted) External INS connector USART5 Not Used NA USART6 Remote ID NA (internal) UART7 External/User (Debug) EchoPilot J12 UART8 IO MCU NA (internal) SPI1 ICM42688P IMU #1 and #2 NA (internal) SPI2 RM3100 Compass and FRAM NA (internal) SPI3 Not Used NA SPI4 ICM42688P IMU #3 and MS5611 Baro #1 NA (internal) SPI5 Not Used NA SPI6 MS5611 Baro #2 NA (internal) I2C1 External RGB LED I2C2 Internal (Spare) Carrier Board J13 I2C3 Not Used NA I2C4 Not Used NA"},{"location":"hardware/#fmu-uart-order","title":"FMU UART Order","text":"<p>The default UART order for use for autopilot firmware is provided below. The port name is important, as you will use this name within ArduPilot to set up parameters associated with each port. e.g. <code>SERIAL1_PROTOCOL</code>.</p> Port Name Function Port Connector SERIAL0 Console USB EchoPilot J7 SERIAL1 GPS1 USART2 None (to Mosaic H) SERIAL2 Telem2 USART3 None (internally routed to Jetson) SERIAL3 GPS2 USART1 None (to Mosaic X5) SERIAL4 External INS (RS-232 shifted) UART4 Carrier Board J32 SERIAL5 Onboard Remote ID USART6 NA SERIAL6 Debug UART7 EchoPilot J12 <p>Please reference the EchoPilot AI's BSP firmware-specific board definition files for additional details related to board setup.</p>"},{"location":"hardware/#can","title":"CAN","text":"<p>2 CAN ports from the autopilot (STM32H743) are exposed, one on the CAN connector, another on an internal (spare) connector (J14) on the carrier board. Please refer to ArduPilot CAN Bus Setup for information about DroneCAN setup.</p> <p>1 CAN port from the Jetson is routed to the external NMEA2K connector. </p> <p>Note</p> <p>To enable CAN on the Jetson, modify <code>/etc/modprobe.d/denylist-mttcan.conf</code> and ensure the line <code>blacklist mttcan</code> is commented out. Reboot, then log in again and run <code>sudo modprobe mttcan</code>.</p>"},{"location":"hardware/#termination","title":"Termination","text":"<p>The two (2) CAN connections from the FMU (FMU CAN1 and FUM CAN2) and the one (1) from the Jetson are driven by LTC2875 transceivers and contain termination resistors at the drivers on the EchoPilot AI board inside the EchoTherm enclosure. Should you desire to remove these termination resistors (e.g., you want to place the system in the middle of a CAN chain rather than at the end), refer to the following resistor locations:  </p> CAN Resistor Label Notes FMU CAN1 R19 Near U4 and U45, size 0402 FMU CAN2 R9 Near U3, size 0402 JETSON CAN1 R95 Near U32, size 0402"},{"location":"hardware/#septentrio-gnss-units","title":"Septentrio GNSS Units","text":"<p>The EchoTherm system contains two Septentrio GNSS systems (X-5 and H). The table below summarizes the connections available to each.</p> GNSS Port Connection Mosaic X5 COM 1 (B1/D1) Autopilot SERIAL3 (115 kpbs) Mosaic X5 COM 2 (F1/H1) Jetson via USB FTDI (e.g. /dev/ttyUSBx) Mosaic X5 USB USB-C port inside enclosure Mosaic H COM 1 (B1/D1) Autopilot SERIAL1 (115 kpbs) Mosaic H COM 2 (F1/H1) Jetson via USB FTDI (e.g. /dev/ttyUSBx) Mosaic H USB USB-C port inside enclosure <p>Please refer to the schematic for more information.</p>"},{"location":"mechanical/","title":"Mechanical","text":""},{"location":"mechanical/#2d-drawing","title":"2D Drawing","text":"<p>Coming Soon</p>"},{"location":"mechanical/#step-file","title":"STEP File","text":"<p>Coming Soon</p>"},{"location":"mechanical/#mounting-and-vibration-isolation","title":"Mounting and Vibration Isolation","text":"<p>The EchoTherm module can be mounted directly using the four M1.6 screws, or it can be mounted by clamping on the lens assembly. In all applications, take care to isolate the EchoTherm from high shock or vibrations, as this could lead to dead pixels or premature part failure.</p>"},{"location":"overview/","title":"EchoTherm Overview","text":"<p>The EchoTherm Module is an easy-to-use, NDAA compliant thermal imager proudly made in the US. </p> <p>Designed for low-cost unmanned systems, the 320\u00d7240 pixel resolution and 4.0mm focal length provides standoff target detection from up to 330 meters away.  The integrated micro-shutter assembly provides automatic non-uniformity correction. The shutter, combined with onboard image processing, work together to generate extremely low-noise images and videos. EchoMAV\u2019s open-source software suite makes it easy to acquire video and interact with the module (zoom, record, change color palettes and more.) Each module can be integrated tightly into custom hardware via an industry standard footprint/connector, or is compatible with a USB cable using the included adapter.</p> <p></p> <p>Get started now:  Quick Start Guide</p>"},{"location":"quickstart/","title":"Quick Start Guide","text":"<p>The goal of this quick start guide is to connect the EchoTherm module to a host desktop Linux system and demonstrate a video feed.</p> <p>Info</p> <p>These instructions were developed and tested on an Ubuntu 22.04 LTS physical machine with a monitor. This guide is not meant for headless embedded systems, it is intended to provide a real-time display.</p>"},{"location":"quickstart/#prerequisites","title":"Prerequisites","text":"<p>You system must have git and build-essential packages (most likely already installed) <pre><code>sudo apt update\nsudo apt install git-all\nsudo apt install build-essential\n</code></pre></p>"},{"location":"quickstart/#quick-start-steps","title":"Quick Start Steps","text":"<ol> <li>Clone the repo and run the install script</li> </ol> <p><pre><code>git clone https://github.com/EchoMAV/EchoTherm-Daemon.git\ncd EchoTherm-Daemon\nsudo ./install.sh\n</code></pre> 2. Reboot the machine 3. Run the echotherm damon <pre><code>echothermd --daemon\n</code></pre> 3. Plug in the EchoTherm Module via the provided USB cable and USB backplate. 4. List your VideoForLinux devices to identify the camera endpoint: <pre><code>v4l2-ctl --list-devices  \n</code></pre></p> <p>Note</p> <p>Take note of the device endpoint (e.g. <code>/dev/video0</code>) and use it in the next step as {Device id}. Depending on your machine setup, the device may be called &gt;<code>Dummy video device</code> or <code>EchoTherm Loopback device</code> </p> <ol> <li>View the video on your desktop: <pre><code>gst-launch-1.0 v4l2src device={Device id} ! videoconvert ! autovideosink\n</code></pre></li> <li>In another terminal window, use the <code>echotherm</code> app to change camera settings, e.g. to change the color palette: <pre><code>echotherm --colorPalette 4\n</code></pre></li> </ol> <p>Congrats! You now have a functional camera. For more software details, visit the EchoTherm-Daemon Repo and/or continue reading these docs.</p>"},{"location":"software/","title":"Software Configuration","text":"<p>The EchoTherm software package is maintained at the EchoTherm-Daemon Repo. For detail related to software functionality and installation, refer to the README.</p>"},{"location":"techspecs/","title":"Technical Specifications","text":""},{"location":"techspecs/#sensor-specifications","title":"Sensor Specifications","text":"Microbolometer Uncooled Vanadium Oxide Pixel Pitch 12 Microns Spectral Response 7.8 - 14 microns Sensor Resolution (Array Format) 320 (h) x 240 (v) Frame Rate 27 Hz Imaging Range -40 C to 330 C Sensor Sensitivity 65 mK (typical), &lt;100 mK (max) @ 25\u00b0C Non-Uniformity Correction (NUC) Automatic or programmable (internal shutter)"},{"location":"techspecs/#optics-and-mechanical","title":"Optics and Mechanical","text":"Focal Length 4.0mm F-number f/1.00 Spatial Resolution  (IFOV, center) 3.00 HFOV 35\u00b0 VFOV 26\u00b0 Detection Range 333m Recognition Range 83m Identification Range 48m Distance to Spot Ratio 56:1 Ingress Protection IP67 Dimension (LxWxH) 21x21x25mm Weight 14g Focus Fixed Lens Material Chalcogenide"},{"location":"techspecs/#thermography","title":"Thermography","text":"Temperature Calibration Calibrated Output in \u00b0C, \u00b0F, K Temperature Accuracy The greater of \u00b15\u00b0C or 5% between 5\u00b0C to 140\u00b0C scene temperatures"},{"location":"techspecs/#environmental","title":"Environmental","text":"Operating Temperature Range -10\u00b0C to 60\u00b0C Storage Temperature Range -40\u00b0C to 80\u00b0C Solar Protection Yes Humidity 10%~95%RH, non-condensing Regulatory ROHS, WEEE, REACH"},{"location":"techspecs/#video-output-and-software","title":"Video Output and Software","text":""},{"location":"techspecs/#power-requirements","title":"Power Requirements","text":"Supply Voltage 3.3V (Hirose Connection), 5.0V with USB Backplate Power 300mW"},{"location":"userguide/","title":"User Guide","text":""},{"location":"userguide/#accessing-the-jetson-console","title":"Accessing the Jetson console","text":"<p>Warning</p> <p>Do not run the Jetson SOM without a heat sink. The lid of the EchoTherm system is the primary heat sink, and running the Jetson with the lid off may result in shut down or throttling. If you need to run the system for a continued period of time with the lid removed, position a fan to move air over the heat spreader installed on the Jetson module.</p> <p>Open the lid of the EchoTherm system, to expose the inner electronics.  </p> <p>Note</p> <p>A thermal pad is positioned between a heat spreader on the Jetson and the EchoTherm system lid. Please ensure this is in position and undamaged after removing and replacing the lid.</p> <p>Attach a USB cable between your host computer and J15 (Console) on the EchoPilot AI Board. A USB-C right angle adapter may be useful. Such adapters are included with the hardware or can be obtained elsewhere. </p> <p>In step 2, your host computer should have enumerated a virtual comm port. You will now need to find the name of the port.</p> <p>Info</p> <p>On Windows: Open Device Manager (Start \u2192 Control Panel \u2192 Hardware and Sound \u2192 Device Manager) Look in the Device Manager list, open the category \"Ports\", and note the COM port added USB Serial Port (COM?) (e.g., COM10). On Linux: Run <code>dmesg -w</code> and then plug in unplug and replug in the USB cable. You should see the name of the device added, typically <code>FTDI USB Serial device converter now attached to ttyUSB?</code> (e.g., ttyUSB0). </p> <p>Use a terminal program to connect to the Jetson's console at 115200 baud, 8N1. </p> <p>Info</p> <p>On Windows: We recommend Putty or TeraTerm. On Linux: We recommend Picocom. Install with <code>sudo apt-get install picocom</code>. Use with <code>picocom /dev/ttyUSB? -b 115200</code>. To exit picocom, use <code>Ctrl-a Ctrl-x</code>.</p> <p>Power the EchoTherm System 13-36VDC source capable of supplying up to 4A.</p> <p>Warning</p> <p>If using a bench supply with over-current protection, we recommend turning it OFF. The boot process requires short bursts of high current and over-current protection on some supplies will result in a failed boot. In most cases, if the Jetson fails to boot it is due to a poor power supply.</p> <p>You should now see the boot messages in your console, and once boot is complete, you will see a login prompt.</p> <p>Note</p> <p>The default username is echopilot and the default password is echopilot</p> <p>Success</p> <p>At this point you are logged into the Jetson.</p>"},{"location":"userguide/#accessing-the-jetson-via-network","title":"Accessing the Jetson via network","text":"<p>The EchoTherm system has two 100Mbps Ethernet ports (ETH1 and ETH2). Upstream, these go to a network switch, so either one can be used to access the Jetson SOM. An M12 to RJ45 cable is required (e.g. ASI-M12-RJ45-11101)</p> <p>EchoMAV's standard provisioning sets the Jetson module to a static IP address provided on the label with the device. There is also an alias ip of 192.168.253.0 which can be used if you do not know the static IP. </p> <p>To gain console access to the Jetson over the network, use <code>ssh</code> from a terminal session on the host computer:</p> <pre><code>ssh echopilot@IP_ADDRESS    #IP_ADDRESS obtained from the label on the device\n</code></pre> <p>Note</p> <p>The default password is echopilot</p> <p>Note</p> <p>If the label is damaged, or the static IP has been inadvertently changes, you can use the configuration IP \"backdoor\" alias of 192.168.154.0/24 to access the system. Ensure your host system is in the 192.168.0.0/24 subnet (any valid IP address not equal to 192.168.154.0 will work). Please refer to the instructions above for how to change your host IP address.</p>"},{"location":"userguide/#ip-configuration","title":"IP Configuration","text":"<p>The EchoPilot AI will be labeled from the factory with a static IP address in the 10.223.0.0/16 subnet such as 10.223.134.126 (for example only). If you do not know the IP address, you may be able to access the system using the backdoor/alias IP of 192.168.154.0/24. </p> <p>During provisioning, the system's static IP address is calculated using the last two octets of the Jetson's <code>eth0</code> interface MAC address with a netmask of 255.255.0.0 (/16). For example, given the MAC address of 00:30:1A:4E:A4:3E, the last two octets 0xA4 and 0x3E are converted from hex to decimal and then assigned as the last two octets of the IP address. In this example, this MAC address would correspond to 10.223.164.62/16 because 0xA4 = 164 and 0x3E = 62. This IP address is printed on the label from the factory.</p>"},{"location":"userguide/#changing-the-ip-address","title":"Changing the IP Address","text":"<p>To change the Jetson's IP address, first gain console access via USB (internally in the box), then follow the steps below to change the configuration to either DHCP or a different static IP address. Making these changes when connected to the Jetson over the network will likely result in you losing your connection as the Ethernet interface goes up/down.</p>"},{"location":"userguide/#configuring-for-dhcp","title":"Configuring for DHCP","text":"<p>If you wish to use DHCP, follow the instructions below:</p> <p>Once logged in via the console, modify the existing static connection (e.g. \"static-eth0\") to be DHCP: <pre><code>sudo nmcli con mod static-eth0 ipv4.method auto\nsudo nmcli con mod static-eth0 ipv4.gateway \"\"\nsudo nmcli con mod static-eth0 ipv4.address \"\"\nsudo nmcli con down static-eth0\nsudo nmcli con up static-eth0\n</code></pre> If the network connection is plugged into a DHCP server, the system will now get an IP address. You can confirm with:  <pre><code>ip addr\n</code></pre></p>"},{"location":"userguide/#configuring-or-changing-the-static-ip-address","title":"Configuring or Changing the Static IP Address","text":"<p>If you do not have a DHCP server, or you wish to assign a static IP address to the Jetson, follow the instructions below.</p> <p>First gain console access via the USB connector. Once logged in via the console, delete the default connection, for example \"Wired connection 1\": <pre><code>sudo nmcli c delete \"Wired connection 1\"\n</code></pre> Set up a static connection called <code>static-eth0</code> with an IP of 10.223.1.10, a netmask of 255.255.0.0 and a gateway of 10.223.1.1. The values are just examples, please adjust to the desired settings for your network. <pre><code>sudo nmcli c add con-name static-eth0 ifname eth0 type ethernet ip4 10.223.1.10/16 gw4 10.223.1.1\n</code></pre> Bring up the new interface <pre><code>sudo nmcli c up static-eth0\n</code></pre> To verify network connectivity, ping another device on the network, or to verify internet connectivity, ping a Google DNS server: <pre><code>ping 8.8.8.8\n</code></pre></p>"},{"location":"userguide/#other-networkmanager-tips-and-tricks","title":"Other NetworkManager tips and tricks","text":"<p>Linux for Tegra uses networkmanager (<code>nmcli</code>) for its network interfaces. Below you will find a few commands for common network tasks. These examples are not intended for you to follow sequentially, these are common examples which will demonstrate most network configuration needs.</p> <p>Show connections:   <code>nmcli con show</code></p> <p>Example: Delete the default connection (\"Wired connection 1\") and set up a static connection called <code>static-eth0</code> with an IP of 172.20.1.100, a netmask of 255.255.0.0 and a gateway of 172.20.2.100:   <pre><code>sudo nmcli c delete \"Wired connection 1\"\nsudo nmcli c add con-name static-eth0 ifname eth0 type ethernet ip4 172.20.1.20/16 gw4 172.20.2.100\nsudo nmcli c up static-eth0\n</code></pre></p> <p>Example: Change IP address of <code>static-eth0</code> connection to <code>192.168.1.4</code> with a 255.255.0.0 (/16) netmask:   <pre><code>sudo nmcli con mod static-eth0 ipv4.address 192.168.1.1/16\n</code></pre></p> <p>Example: Change the gateway of <code>static-eth0</code> connection to <code>192.168.1.1</code>:   <pre><code>sudo nmcli con mod static-eth0 ipv4.gateway 192.168.1.1\n</code></pre></p> <p>Example: Change the DNS of <code>static-eth0</code> connection to <code>8.8.8.8</code>:      <pre><code>sudo nmcli con mod static-eth0 ipv4.dns \"8.8.8.8\"\n</code></pre></p> <p>Example: Take down/up of <code>static-eth0</code>:     <pre><code>sudo nmcli con down static-eth0\nsudo nmcli con up static-eth0\n</code></pre> Example: Delete the <code>static-eth0</code> connection:   <pre><code>sudo nmcli c delete \"static-eth0\"\n</code></pre></p> <p>Example: Add a new connection called <code>static-eth0</code> with IP <code>172.20.2.22/16</code> and gateway <code>172.20.2.100</code> on interface <code>eth0</code>:   <pre><code>sudo nmcli c add con-name static-eth0 ifname eth0 type ethernet ip4 172.20.2.22/16 gw4 172.20.2.100\n</code></pre></p> <p>Example: Add a persistent route so that multicast traffic to 224.x.x.x goes to the <code>static-eth0</code> connection: <pre><code>sudo nmcli con mod static-eth0 +ipv4.routes \"224.0.0.0/8\"\n</code></pre></p> <p>Example: Change the static-eth0 connection to remove static IP and enable DHCP. In this case, it would be clearer to delete the connection since it is named <code>static-eth0</code> and call it something else, but for edification: <pre><code>sudo nmcli con mod static-eth0 ipv4.address \"\"\nsudo nmcli con mod static-eth0 ipv4.gateway \"\"\nsudo nmcli con mod static-eth0 ipv4.method auto\nsudo nmcli con reload static-eth0\n</code></pre></p>"},{"location":"userguide/#connecting-to-the-fmu-via-the-usb-connector","title":"Connecting to the FMU via the USB connector","text":"<ol> <li>Attach a USB cable between the host computer and the FMU USB connector (J7).</li> <li>Start a Ground Control application on the host computer such as QGroundControl or Mission Planner.</li> </ol> <p>Info</p> <p>QGroundControl: Will automatically connect. Mission Planner: Select the appropriate COM port at the top right, 115200, then click CONNECT.</p>"},{"location":"userguide/#cellular-modem-installation","title":"Cellular Modem Installation","text":"<p>The EchoTherm system is compatible with Sierra Wireless M.2 3052 modems, such as the EM9191. Using other modems may not work without configuration changes due to the way other modems detect the presence of SIM cards and other critical functionality. </p> <p>When installing a cellular modem, care must be provided to also install the heat sink kit. This kit works by placing a thermal bad under the modem, which couples heat to a copper pour on the EchoTherm carrier board. On the top side of the EchoTherm carrier board, a heat sink is placed using thermal conductive epoxy. Failure to properly heat sink the Cellular modem may result in throttling, especially during data uploads (such as video streaming).</p>"}]}